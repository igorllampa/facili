package br.com.facilitecommerce.api.assembler;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import br.com.facilitecommerce.api.model.input.CarrinhoInput;
import br.com.facilitecommerce.domain.model.Carrinho;
import br.com.facilitecommerce.domain.model.Produto;
import br.com.facilitecommerce.domain.service.CadastroProdutoService;

@Component
public class CarrinhoInputDisassembler {

	@Autowired
	ModelMapper modelMapper;
	
	@Autowired
	CadastroProdutoService cadastroProduto;
	
	public Carrinho toDomainObject(CarrinhoInput carrinhoInput) {		
		//Use modelmapper to automatize the process of mapping objects
		Carrinho carrinho = modelMapper.map(carrinhoInput, Carrinho.class);
		
		
		System.out.println("Antes:" + carrinho.getItens());
		
		carrinho.getItens().stream()
			.forEach(a -> {
				//Atualiza Produto
				Produto produto = cadastroProduto.buscar(a.getProduto().getId());
				a.setProduto(produto);
				
				a.buscarValorUnitario();				
			});
			
		System.out.println("Depois:" + carrinho.getItens());
		
		return carrinho;
				
//		Carrinho carrinho = new Carrinho();			
//		List<ItemCarrinho> itens = new ArrayList<>();
//		
//		carrinho.setCupom(null);		
//		carrinho.setTotalBruto(BigDecimal.ZERO);
//		carrinho.setTotalDesconto(BigDecimal.ZERO);
//		carrinho.setTotalLiquido(BigDecimal.ZERO);
//		carrinho.setItens(itens);
//				
//		carrinhoInput.getItens().stream()
//			.map(item -> {				
//				Produto produto = cadastroProduto.buscar(item.getProdutoId());					
//				ItemCarrinho itemCarrinho = new ItemCarrinho();
//				itemCarrinho.setCarrinho(carrinho);
//				itemCarrinho.setProduto(produto);
//				itemCarrinho.setQuantidade(item.getQuantidade());
//				itemCarrinho.setValorUnitario(produto.getPreco());
//				itemCarrinho.calcularValorTotal();				
//				
//				return itens.add(itemCarrinho);
//			})
//			.collect(Collectors.toList());
//		
//		return carrinho;
	}
}
